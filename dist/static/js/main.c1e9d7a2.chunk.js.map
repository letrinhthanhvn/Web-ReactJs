{"version":3,"sources":["components/layout/SignedInLinks.js","redux/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/ProjectDetail.js","components/projects/CreateProject.js","redux/actions/projectActions.js","App.js","serviceWorker.js","redux/reducers/authReducer.js","redux/reducers/projectReducer.js","redux/reducers/rootReducer.js","config/firebaseConfig.js","index.js"],"names":["mapDispatchToProps","signOut","data","dispatch","getState","_ref2","getFirebase","auth","then","type","connect","props","console","log","react_default","a","createElement","className","react_router_dom","to","onClick","profile","initials","SignedOutLinks","Navbar","_this$props","this","link","uid","layout_SignedInLinks","layout_SignedOutLinks","Component","state","firebaseReducer","Notification","notifications","map","noti","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","createAt","toString","ProjectList","e","projects_ProjectSummary","DashBoard","notification","projects_ProjectList","projects","Notifications","react_router","compose","firestoreReducer","ordered","nofification","firestoreConnect","collection","orderBy","limit","SignIn","email","password","_onChange","_this","setState","Object","defineProperty","target","value","_onSubmit","preventDefault","signIn","onSubmit","htmlFor","onChange","_ref","signInWithEmailAndPassword","catch","SignUp","firstName","lastName","signUp","authError","_ref3","getFirestore","firebase","firestore","createUserWithEmailAndPassword","res","doc","set","authReducer","match","params","CreateProject","createProject","history","push","userId","add","objectSpread","authorId","Date","authorLastName","authorFirstName","payload","App","layout_Navbar","exact","path","component","ProjectDetail","Boolean","window","location","hostname","initialState","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","firebaseConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseStateName","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c1e9d7a2.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signOut } from '../../redux/actions/authActions';\nconst SignedInLinks = (props) => {\n   console.log('SignedInLinks', props)\n   return (\n      <ul className='right'>\n         <li><NavLink to='/create'>New Project</NavLink></li>\n         <li><a onClick={() => props.signOut()}>Log Out</a></li>\n         <li><NavLink to='/' className='btn-floating btn-large waves-effect waves-light red'>{props.profile.initials}</NavLink></li>\n      </ul>\n   )\n}\n\nconst mapDispatchToProps = {\n   signOut\n}\n\nconst mapStateToProps = (state) => {\n   return {\n      profile: state.firebaseReducer.profile\n   }\n}\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","export const signIn = (data) => {\n   return (dispatch, getState, { getFirebase }) => {\n      const firebase = getFirebase();\n\n      firebase.auth().signInWithEmailAndPassword(\n         data.email,\n         data.password\n      ).then(() => {\n         dispatch({ type: \"LOGIN_SUCCESS\" })\n\n      }).catch(e => {\n         dispatch({ type: \"LOGIN_FAILED\", e })\n      })\n   }\n}\n\nexport const signOut = (data) => {\n   return (dispatch, getState, { getFirebase }) => {\n      const firebase = getFirebase();\n\n      firebase.auth().signOut(\n      ).then(() => {\n         dispatch({ type: \"SIGNOUT_SUCCESS\" })\n      })\n   }\n}\n\nexport const signUp = (data) => {\n   return (dispatch, getState, { getFirebase, getFirestore }) => {\n      const firebase = getFirebase();\n      const firestore = getFirestore()\n      console.log('data signUp', data)\n\n      firebase.auth().createUserWithEmailAndPassword(\n         data.email,\n         data.password\n      ).then((res) => {\n         console.log('res signUp :::::::::', res)\n         return firestore.collection('users').doc(res.user.uid).set({\n            firstName: data.firstName,\n            lastName: data.lastName,\n            initials: data.firstName[0] + data.lastName[0]\n         })\n      }).then(() => {\n         dispatch({ type: \"SIGNUP_SUCCESS\" })\n      }).catch(e => {\n         dispatch({ type: \"SIGNUP_FAILED\", e })\n      })\n   }\n}\n\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst SignedOutLinks = () => {\n   return (\n      <ul className='right'>\n         <li><NavLink to='/signup'>Sign Up</NavLink></li>\n         <li><NavLink to='/signin'>Log In</NavLink></li>\n      </ul>\n   )\n}\n\nexport default SignedOutLinks;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport SignedInLinks from './SignedInLinks';\nimport SignedOutLinks from './SignedOutLinks';\nimport { connect } from 'react-redux';\nclass Navbar extends Component {\n   render() {\n      const { profile, auth } = this.props\n      let link = auth.uid ? <SignedInLinks profile={profile}/> : <SignedOutLinks />\n      return (\n         <nav className=\"nav-wrapper green\">\n            <div className=\"container\">\n               <Link to='/' className='brand-logo'>Training Web</Link>\n               {\n                  link\n               }\n            </div>\n         </nav>\n      )\n   }\n}\n\nconst mapStateToProps = (state) => {\n   console.log('state', state)\n   return {\n      auth: state.firebaseReducer.auth,\n      profile: state.firebaseReducer.profile\n   }\n}\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\nimport moment from 'moment';\nconst Notification = (props) => {\n   const notifications = props.notifications\n   return (\n      <div className=\"section\">\n         <div className=\"card\">\n            <div className=\"card-content\">\n               <span className=\"card-title\">Notifications</span>\n               <ul className=\"notifications\">\n                  {\n                     notifications && notifications.map(noti => {\n                        return (\n                           <li key={noti.id}>\n                              <span className=\"pink-text\">{noti.user} - </span>\n                              <span className=\"green-text\">{noti.content}</span>\n                              <div className=\"grey-text note-date\">\n                                 {moment(noti.time.toDate()).fromNow()}\n                              </div>\n                           </li>\n                        )\n                     })\n                  }\n               </ul>\n            </div>\n         </div>\n      </div>\n   )\n}\n\nexport default Notification;","import React from 'react';\nimport moment from 'moment';\nconst ProjectSummary = (props) => {\n   const project = props.project\n   if (project) {\n      return (\n         <div className=\"card\">\n            <div className=\"card-content\">\n               <span className='card-title'>{project.title}</span>\n               <p>Posted by Thanh</p>\n               <p className='grey-text'>{moment(project.createAt.toDate()).toString()}</p>\n            </div>\n         </div>\n      )\n   } else {\n      return (\n         <div className=\"container center\">\n            <p>Loading Project list</p>\n         </div>\n      )\n   }\n\n}\n\nexport default ProjectSummary;","import React from 'react';\nimport ProjectSummary from './ProjectSummary';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom'\nconst ProjectList = (props) => {\n   return (\n      <div className=\"project-list section\">\n         {\n            props.project.map(e => {\n               return (\n                  <Link to={'/project/' + e.id} key={e.id}>\n                     <ProjectSummary key={e.id} project={e} />\n                  </Link>\n               )\n            })\n         }\n      </div>\n   )\n}\nexport default ProjectList;","import React, { Component } from 'react';\nimport Notification from './Notifications';\nimport ProjectList from '../projects/ProjectList';\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nclass DashBoard extends Component {\n   render() {\n      const { auth, notification } = this.props\n      if (!auth.uid) return <Redirect to={'/signin'} />\n      return (\n         <div className=\"container\">\n            <div className='row'>\n               <div className=\"col s12 m6\">\n                  <ProjectList project={this.props.projects} />\n               </div>\n               <div className=\"col s12 m5 offset-m1\">\n                  <Notification notifications={notification}/>\n               </div>\n            </div>\n         </div>\n      )\n   }\n}\n\nconst mapStateToProps = (state) => {\n   return {\n      projects: state.firestoreReducer.ordered.projects || [],\n      auth: state.firebaseReducer.auth,\n      notification: state.firestoreReducer.ordered.nofification\n   }\n}\n\n// export default firestoreConnect([{ collection: \"projects\" }])\n//    (connect(\n//       mapStateToProps)(DashBoard))\n\nexport default compose(\n   connect(mapStateToProps),\n   firestoreConnect([\n      { collection: \"projects\", orderBy: ['createAt', 'desc'] },\n      { collection: 'nofification', limit: 3, orderBy: ['time', 'desc'] }\n   ]),\n)(DashBoard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { signIn } from '../../redux/actions/authActions';\nimport { Redirect } from 'react-router-dom';\nclass SignIn extends Component {\n\n   state = {\n      email: '',\n      password: '',\n      // firstname: '',\n      // lastname: ''\n   }\n\n   _onChange = (e) => {\n      this.setState({\n         [e.target.id]: e.target.value\n      })\n   }\n\n   _onSubmit = (e) => {\n      e.preventDefault()\n      this.props.signIn(this.state)\n   }\n\n   render() {\n      const { auth } = this.props\n      if (auth.uid) return <Redirect to='/' />\n      return (\n         <div className=\"container\">\n            <form onSubmit={this._onSubmit} className=\"white\">\n               <h5 className=\"gray-text\">\n                  Sign In\n               </h5>\n               <div className=\"input-field\">\n                  <label htmlFor='email'>\n                     Email\n                  </label>\n                  <input type='email' id='email' onChange={this._onChange} />\n               </div>\n               <div className=\"input-field\">\n                  <label htmlFor='password'>\n                     Password\n                  </label>\n                  <input type='password' id='password' onChange={this._onChange} />\n               </div>\n               {/* <div className=\"input-field\">\n                  <label htmlFor='firstName'>\n                     Fisrt name\n                  </label>\n                  <input type='text' id='firstname' onChange={this._onChange} />\n               </div>\n               <div className=\"input-field\">\n                  <label htmlFor='lastName'>\n                     Last name\n                  </label>\n                  <input type='text' id='lastname' onChange={this._onChange} />\n               </div> */}\n               <div className=\"input-field\">\n                  <button className=\"waves-effect waves-light btn\">Login</button>\n               </div>\n            </form>\n         </div>\n      )\n   }\n}\n\nconst mapDispatchToProps = {\n   signIn\n}\n\nconst mapStateToProps = (state) => {\n   return {\n      auth: state.firebaseReducer.auth\n   }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { signUp } from '../../redux/actions/authActions';\nclass SignUp extends Component {\n\n   state = {\n      email: '',\n      password: '',\n      firstName: '',\n      lastName: ''\n   }\n\n   _onChange = (e) => {\n      this.setState({\n         [e.target.id]: e.target.value\n      })\n   }\n\n   _onSubmit = (e) => {\n      e.preventDefault()\n      this.props.signUp(this.state)\n   }\n\n   render() {\n      const { auth, authError } = this.props\n      if (auth.uid) return <Redirect to='/' />\n      return (\n         <div className=\"container\">\n            <form onSubmit={this._onSubmit} className=\"white\">\n               <h5 className=\"gray-text\">\n                  Sign Up\n               </h5>\n               <div className=\"input-field\">\n                  <label htmlFor='email'>\n                     Email\n                  </label>\n                  <input type='email' id='email' onChange={this._onChange} />\n               </div>\n               <div className=\"input-field\">\n                  <label htmlFor='password'>\n                     Password\n                  </label>\n                  <input type='password' id='password' onChange={this._onChange} />\n               </div>\n               <div className=\"input-field\">\n                  <label htmlFor='firstName'>\n                     Fisrt name\n                  </label>\n                  <input type='text' id='firstName' onChange={this._onChange} />\n               </div>\n               <div className=\"input-field\">\n                  <label htmlFor='lastName'>\n                     Last name\n                  </label>\n                  <input type='text' id='lastName' onChange={this._onChange} />\n               </div>\n               <div className=\"input-field\">\n                  <button className=\"waves-effect waves-light btn\">Sign Up</button>\n                  <div className=\"red-text center\">\n                     {authError ? <p>{authError}</p> : null}\n                  </div>\n               </div>\n            </form>\n         </div>\n      )\n   }\n}\n\nconst mapDispatchToProps = {\n   signUp\n}\n\nconst mapStateToProps = (state) => {\n   return {\n      auth: state.firebaseReducer.auth,\n      authError: state.authReducer.authError\n   }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React from 'react';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\n\nconst ProjectDetail = (props) => {\n   let { project, auth } = props;\n   if (!auth.uid) return <Redirect to='/signin'/>\n   if (project) {\n      return (\n         <div className=\"container\">\n            <div className=\"card\">\n               <div className=\"card-content\">\n                  <span className=\"card-title\">\n                     Project + {project.title}\n                  </span>\n                  <p>{project.content}</p>\n               </div>\n            </div>\n         </div>\n      )\n   } else {\n      return (\n         <div className=\"container center\">\n            <p>Loading project ...</p>\n         </div>\n      )\n   }\n\n}\n\nconst mapStateToProps = (state, props) => {\n   let id = props.match.params.id;\n   let projects = state.firestoreReducer.data.projects\n   let project = !!projects ? projects[id] : null\n   return {\n      project,\n      auth: state.firebaseReducer.auth\n   }\n}\n\nexport default compose(\n   connect(mapStateToProps),\n   firestoreConnect([\n      { collection: \"projects\" }\n   ]),\n)(ProjectDetail);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createProject } from '../../redux/actions/projectActions';\nimport { Redirect } from 'react-router-dom';\nclass CreateProject extends Component {\n\n   state = {\n      title: '',\n      content: ''\n   }\n\n   _onChange = (e) => {\n      this.setState({\n         [e.target.id]: e.target.value\n      })\n   }\n\n   _onSubmit = (e) => {\n      e.preventDefault()\n      this.props.createProject(this.state)\n      this.props.history.push('/');\n   }\n\n   render() {\n      const { auth } = this.props\n      if (!auth.uid) return <Redirect to='/signin'/>\n      return (\n         <div className=\"container\">\n            <form onSubmit={this._onSubmit} className=\"white\">\n               <h4 className=\"grey-text\">Create New Project</h4>\n               <div className=\"input-field\">\n                  <label htmlFor='title'>Title</label>\n                  <input type=\"text\" id='title' className=\"input-field col s12\" onChange={this._onChange} />\n               </div>\n               <div className=\"input-field\">\n                  <label htmlFor='project-content'>Project Content</label>\n                  <input type=\"text\" id='content' className=\"input-field col s12\" onChange={this._onChange} />\n               </div>\n               <div className=\"input-field\">\n                  <button className=\"waves-effect waves-light btn\">Create</button>\n               </div>\n            </form>\n         </div>\n      )\n   }\n}\n\nconst mapDispatchToProps = {\n   createProject\n}\n\nconst mapStateToProps = (state) => {\n   return {\n      auth: state.firebaseReducer.auth\n   }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);","export const createProject = (data) => {\n   console.log('createProject Actions', data)\n   return (dispatch, getState, { getFirebase, getFirestore }) => {\n      console.log('dispatch, getState, { getFirebase, getFirestore } :::::::', dispatch, getState, getFirebase, getFirestore)\n      const firestore = getFirestore();\n      let profile = getState().firebaseReducer.profile;\n      let userId = getState().firebaseReducer.auth.uid\n      firestore.collection('projects').add({\n         ...data,\n         authorId: userId,\n         createAt: new Date(),\n         authorLastName: profile.lastName,\n         authorFirstName: profile.firstName\n      }).then(() =>\n         dispatch({ type: 'CREATE_PROJECT', payload: data })\n      ).catch(e =>\n         dispatch({ type: 'CREATE_PROJECT_FAILED', payload: e })\n      )\n   }\n}","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport DashBoard from './components/dashboard/Dashboard';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport ProjectDetail from './components/projects/ProjectDetail';\nimport CreateProject from './components/projects/CreateProject';\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch >\n            <Route exact path='/' component={DashBoard} />\n            <Route path='/signin' component={SignIn} />\n            <Route path='/project/:id' component={ProjectDetail} />\n            <Route path='/signup' component={SignUp} />\n            <Route path='/create' component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/**\n* Created by thanhlt on Mon Apr 01 2019\n* Copyright (c) 2019 github.com/letrinhthanhvn\n*/\n\nconst initialState = {\n   authError: null\n}\n\nconst authReducer = (state = initialState, action) => {\n   switch (action.type) {\n\n      case \"LOGIN_SUCCESS\": {\n         console.log('LOGIN_SUCCESS')\n         return {\n            ...state\n         }\n      }\n\n      case \"LOGIN_FAILED\": {\n         console.log('LOGIN_FAILED')\n         return {\n            ...state\n         }\n      }\n\n      case \"SIGNOUT_SUCCESS\": {\n         console.log('SIGNOUT_SUCCESS')\n         return {\n            ...state\n         }\n      }\n\n      case \"SIGNUP_FAILED\": {\n         console.log('SIGNUP_FAILED', action.e.message)\n         return {\n            ...state,\n            authError: action.e.message\n         }\n      }\n\n      case \"SIGNUP_SUCCESS\": {\n         console.log('SIGNUP_SUCCESS')\n         return {\n            ...state,\n            authError: null\n         }\n      }\n\n      default:\n         return {\n            ...state\n         }\n   }\n}\n\nexport default authReducer;\n\n","/**\n* Created by thanhlt on Mon Apr 01 2019\n* Copyright (c) 2019 github.com/letrinhthanhvn\n*/\n\nconst initialState = {\n   projects: [\n      { id: '1', title: 'Luyên thuyên ngày mưa', content: 'hello hello hello' },\n      { id: '2', title: 'Thói đời', content: 'hello hello hello' },\n      { id: '3', title: 'Mượn rượu tỏ tình', content: 'hello hello hello' },\n   ]\n}\n\nconst projectReducer = (state = initialState, action) => {\n   switch (action.type) {\n      case 'CREATE_PROJECT': {\n         console.log('hello')\n\n         return {\n            ...state\n         }\n      }\n\n      case 'CREATE_PROJECT_FAILED': {\n         return {\n            ...state\n         }\n      }\n\n      default:\n         return {\n            ...state\n         }\n   }\n}\n\nexport default projectReducer;\n\n","import authReducer from './authReducer';\nimport projectReducer from './projectReducer';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\nconst rootReducer = combineReducers({\n   authReducer,\n   projectReducer,\n   firestoreReducer,\n   firebaseReducer\n})\n\nexport default rootReducer;","import firebase from 'firebase/app';\nimport 'firebase/auth'\nimport 'firebase/database'\nimport 'firebase/firestore'\n\nvar config = {\n   apiKey: \"AIzaSyAwBfqiaaPbE-EUHxrSjVmj703767849l0\",\n   authDomain: \"training-web-react.firebaseapp.com\",\n   databaseURL: \"https://training-web-react.firebaseio.com\",\n   projectId: \"training-web-react\",\n   storageBucket: \"training-web-react.appspot.com\",\n   messagingSenderId: \"507232080973\"\n};\nfirebase.initializeApp(config);\n// firebase.firestore().settings({ timestampsInSnapshots: true })\nfirebase.firestore().settings({})\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './redux/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { getFirestore, reduxFirestore } from 'redux-firestore';\nimport { getFirebase, reactReduxFirebase } from 'react-redux-firebase';\nimport firebaseConfig from './config/firebaseConfig';\nconst store = createStore(rootReducer,\n   compose(\n      applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n      reduxFirestore(firebaseConfig),\n      reactReduxFirebase(firebaseConfig, { useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true, firebaseStateName: 'firebaseReducer' })\n   )\n)\nconst Setup = () => {\n   return (\n      <Provider store={store}>\n         <App />\n      </Provider>\n   )\n}\nReactDOM.render(<Provider store={store}>\n   <App />\n</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}